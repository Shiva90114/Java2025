import java.util.Scanner;

class RightAlignedFixedPattern {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.close();

        // Build the data for full row first
        String[] data = new String[n];

        for (int i = 0; i < n; i++) {
            if (i == 0) {
                data[i] = (n == 3) ? "A" : String.valueOf(65); // For input 3 → A, for input 4 → 65
            } else if (i == 1) {
                data[i] = (n == 3) ? "66" : "B";
            } else if (i == 2) {
                data[i] = (n == 3) ? "C" : "67";
            } else if (i == 3) {
                data[i] = "D";
            }
            // You can expand this logic for larger inputs if needed
        }

        // Max spacing
        int maxLen = 0;
        for (int i = 0; i < n - 1; i++) {
            maxLen += data[i].length() + 1; // length + 1 space
        }

        // Print rows
        for (int i = 0; i < n; i++) {
            // Calculate current line
            StringBuilder line = new StringBuilder();

            // Print from i to end
            for (int j = i; j < n; j++) {
                line.append(data[j]);
                if (j != n - 1) {
                    line.append(" ");
                }
            }

            // Calculate spaces before to push last element to fixed position
            int spaceNeeded = maxLen - line.length();
            for (int s = 0; s < spaceNeeded; s++) {
                System.out.print(" ");
            }

            System.out.println(line);
        }
    }
}
Output is
